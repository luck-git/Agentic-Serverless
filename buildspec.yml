version: 0.2
env:
  variables:
    ENVIRONMENT: prod
phases:
  install:
    runtime-versions:
      python: 3.9
    commands:
      - yum update -y
      - yum install -y unzip wget python3 python3-pip
      - echo "Installing dependencies..."
      - pip install -r requirements.txt || echo "No requirements.txt found, skipping"
      - echo "Installing Terraform..."
      - wget https://releases.hashicorp.com/terraform/1.7.0/terraform_1.7.0_linux_amd64.zip
      - unzip -o terraform_1.7.0_linux_amd64.zip -d /tmp/
      - chmod +x /tmp/terraform
      - mv /tmp/terraform /usr/local/bin/
      - terraform --version || { echo "Terraform installation failed"; exit 1; }
      - pip install awscli --upgrade

  pre_build:
    commands:
      - echo "Fetching secrets from AWS SSM Parameter Store"
      - export GITHUB_TOKEN=$(aws ssm get-parameter --name "/github_token" --with-decryption --query "Parameter.Value" --output text)
      - export GITHUB_OWNER=$(aws ssm get-parameter --name "/github_owner" --query "Parameter.Value" --output text)
      - export GITHUB_REPO=$(aws ssm get-parameter --name "/github_repo" --query "Parameter.Value" --output text)
      - export GITHUB_BRANCH=$(aws ssm get-parameter --name "/github_branch" --query "Parameter.Value" --output text)
      - echo "=== DEBUGGING VARIABLES ==="
      - echo "GITHUB_OWNER = $GITHUB_OWNER"
      - echo "GITHUB_REPO = $GITHUB_REPO"
      - echo "GITHUB_BRANCH = $GITHUB_BRANCH"
      - echo "ENVIRONMENT = $ENVIRONMENT"
      - echo "=== END DEBUG ==="
      - |
        cat > terraform.tfvars << EOF
        environment   = "$ENVIRONMENT"
        github_owner  = "$GITHUB_OWNER"
        github_repo   = "$GITHUB_REPO"
        github_token  = "$GITHUB_TOKEN"
        github_branch = "$GITHUB_BRANCH"
        EOF
      - echo "Generated terraform.tfvars:"
      - cat terraform.tfvars

  build:
    commands:
      - echo "Starting Terraform deployment..."
      - pwd
      - ls -la
      - echo "Checking Terraform configuration..."
      - cat variable.tf || echo "variable.tf not found"
      - cd terraform
      - terraform init
      - terraform validate
      - echo "Running terraform plan"
      - terraform plan -input=false -var-file=../terraform.tfvars -out=tfplan
      - terraform apply -input=false -auto-approve tfplan

artifacts:
  files:
    - '**/*'
  name: terraform-artifacts

cache:
  paths:
    - '/root/.cache/pip/**/*'
    - '.terraform/**/*'